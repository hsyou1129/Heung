// Generated by view binder compiler. Do not edit!
package com.example.heung.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.heung.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final Button btnQuit;

  @NonNull
  public final Button buttonEnglish;

  @NonNull
  public final Button buttonKorean;

  @NonNull
  public final Button darkModeButton;

  @NonNull
  public final Button defaultModeButton;

  @NonNull
  public final Button logout;

  private ActivitySettingBinding(@NonNull LinearLayout rootView, @NonNull ImageButton btnBack,
      @NonNull Button btnQuit, @NonNull Button buttonEnglish, @NonNull Button buttonKorean,
      @NonNull Button darkModeButton, @NonNull Button defaultModeButton, @NonNull Button logout) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnQuit = btnQuit;
    this.buttonEnglish = buttonEnglish;
    this.buttonKorean = buttonKorean;
    this.darkModeButton = darkModeButton;
    this.defaultModeButton = defaultModeButton;
    this.logout = logout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_quit;
      Button btnQuit = ViewBindings.findChildViewById(rootView, id);
      if (btnQuit == null) {
        break missingId;
      }

      id = R.id.button_english;
      Button buttonEnglish = ViewBindings.findChildViewById(rootView, id);
      if (buttonEnglish == null) {
        break missingId;
      }

      id = R.id.button_korean;
      Button buttonKorean = ViewBindings.findChildViewById(rootView, id);
      if (buttonKorean == null) {
        break missingId;
      }

      id = R.id.darkModeButton;
      Button darkModeButton = ViewBindings.findChildViewById(rootView, id);
      if (darkModeButton == null) {
        break missingId;
      }

      id = R.id.defaultModeButton;
      Button defaultModeButton = ViewBindings.findChildViewById(rootView, id);
      if (defaultModeButton == null) {
        break missingId;
      }

      id = R.id.logout;
      Button logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      return new ActivitySettingBinding((LinearLayout) rootView, btnBack, btnQuit, buttonEnglish,
          buttonKorean, darkModeButton, defaultModeButton, logout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
