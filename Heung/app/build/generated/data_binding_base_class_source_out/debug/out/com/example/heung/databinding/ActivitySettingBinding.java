// Generated by view binder compiler. Do not edit!
package com.example.heung.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.heung.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnQuit;

  @NonNull
  public final Button darkModeButton;

  @NonNull
  public final Button defaultModeButton;

  @NonNull
  public final RadioGroup languageRadioGroup;

  @NonNull
  public final Button logout;

  @NonNull
  public final RadioButton radioButtonEnglish;

  @NonNull
  public final RadioButton radioButtonKorean;

  private ActivitySettingBinding(@NonNull LinearLayout rootView, @NonNull Button btnQuit,
      @NonNull Button darkModeButton, @NonNull Button defaultModeButton,
      @NonNull RadioGroup languageRadioGroup, @NonNull Button logout,
      @NonNull RadioButton radioButtonEnglish, @NonNull RadioButton radioButtonKorean) {
    this.rootView = rootView;
    this.btnQuit = btnQuit;
    this.darkModeButton = darkModeButton;
    this.defaultModeButton = defaultModeButton;
    this.languageRadioGroup = languageRadioGroup;
    this.logout = logout;
    this.radioButtonEnglish = radioButtonEnglish;
    this.radioButtonKorean = radioButtonKorean;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_quit;
      Button btnQuit = ViewBindings.findChildViewById(rootView, id);
      if (btnQuit == null) {
        break missingId;
      }

      id = R.id.darkModeButton;
      Button darkModeButton = ViewBindings.findChildViewById(rootView, id);
      if (darkModeButton == null) {
        break missingId;
      }

      id = R.id.defaultModeButton;
      Button defaultModeButton = ViewBindings.findChildViewById(rootView, id);
      if (defaultModeButton == null) {
        break missingId;
      }

      id = R.id.language_radio_group;
      RadioGroup languageRadioGroup = ViewBindings.findChildViewById(rootView, id);
      if (languageRadioGroup == null) {
        break missingId;
      }

      id = R.id.logout;
      Button logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.radio_button_english;
      RadioButton radioButtonEnglish = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonEnglish == null) {
        break missingId;
      }

      id = R.id.radio_button_korean;
      RadioButton radioButtonKorean = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonKorean == null) {
        break missingId;
      }

      return new ActivitySettingBinding((LinearLayout) rootView, btnQuit, darkModeButton,
          defaultModeButton, languageRadioGroup, logout, radioButtonEnglish, radioButtonKorean);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
