// Generated by view binder compiler. Do not edit!
package com.example.heung.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.heung.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnPostlist;

  @NonNull
  public final RecyclerView latestPostsRecyclerview;

  @NonNull
  public final Button logout;

  @NonNull
  public final ConstraintLayout mainLayout;

  @NonNull
  public final RecyclerView popularPostsRecyclerview;

  @NonNull
  public final TextView post;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView tvPopularPosts;

  @NonNull
  public final TextView tvRecentPosts;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnPostlist,
      @NonNull RecyclerView latestPostsRecyclerview, @NonNull Button logout,
      @NonNull ConstraintLayout mainLayout, @NonNull RecyclerView popularPostsRecyclerview,
      @NonNull TextView post, @NonNull TextView textView, @NonNull TextView tvPopularPosts,
      @NonNull TextView tvRecentPosts) {
    this.rootView = rootView;
    this.btnPostlist = btnPostlist;
    this.latestPostsRecyclerview = latestPostsRecyclerview;
    this.logout = logout;
    this.mainLayout = mainLayout;
    this.popularPostsRecyclerview = popularPostsRecyclerview;
    this.post = post;
    this.textView = textView;
    this.tvPopularPosts = tvPopularPosts;
    this.tvRecentPosts = tvRecentPosts;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_postlist;
      Button btnPostlist = ViewBindings.findChildViewById(rootView, id);
      if (btnPostlist == null) {
        break missingId;
      }

      id = R.id.latest_posts_recyclerview;
      RecyclerView latestPostsRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (latestPostsRecyclerview == null) {
        break missingId;
      }

      id = R.id.logout;
      Button logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      ConstraintLayout mainLayout = (ConstraintLayout) rootView;

      id = R.id.popular_posts_recyclerview;
      RecyclerView popularPostsRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (popularPostsRecyclerview == null) {
        break missingId;
      }

      id = R.id.post;
      TextView post = ViewBindings.findChildViewById(rootView, id);
      if (post == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.tv_popular_posts;
      TextView tvPopularPosts = ViewBindings.findChildViewById(rootView, id);
      if (tvPopularPosts == null) {
        break missingId;
      }

      id = R.id.tv_recent_posts;
      TextView tvRecentPosts = ViewBindings.findChildViewById(rootView, id);
      if (tvRecentPosts == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnPostlist,
          latestPostsRecyclerview, logout, mainLayout, popularPostsRecyclerview, post, textView,
          tvPopularPosts, tvRecentPosts);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
