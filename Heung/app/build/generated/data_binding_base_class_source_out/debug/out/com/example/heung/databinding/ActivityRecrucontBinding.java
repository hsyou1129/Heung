// Generated by view binder compiler. Do not edit!
package com.example.heung.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.NumberPicker;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.heung.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRecrucontBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout LinearLayoutAlready;

  @NonNull
  public final Button complete;

  @NonNull
  public final LinearLayout editComment;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView recruit;

  @NonNull
  public final TextView recruitContact;

  @NonNull
  public final TextView recruitContentAuthor;

  @NonNull
  public final ImageButton recruitContentButtonBack;

  @NonNull
  public final TextView recruitContentContent;

  @NonNull
  public final View recruitContentContentLine;

  @NonNull
  public final TextView recruitContentCurr;

  @NonNull
  public final TextView recruitContentDate;

  @NonNull
  public final TextView recruitContentEndDate;

  @NonNull
  public final TextView recruitContentMax;

  @NonNull
  public final TextView recruitContentTitle;

  @NonNull
  public final View recruitContentTitleLine;

  @NonNull
  public final TextView recruitContentType;

  @NonNull
  public final NumberPicker recruitCurr;

  @NonNull
  public final Button recruitReplyDelete;

  @NonNull
  public final TextView recruitType;

  private ActivityRecrucontBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout LinearLayoutAlready, @NonNull Button complete,
      @NonNull LinearLayout editComment, @NonNull LinearLayout linearLayout,
      @NonNull TextView recruit, @NonNull TextView recruitContact,
      @NonNull TextView recruitContentAuthor, @NonNull ImageButton recruitContentButtonBack,
      @NonNull TextView recruitContentContent, @NonNull View recruitContentContentLine,
      @NonNull TextView recruitContentCurr, @NonNull TextView recruitContentDate,
      @NonNull TextView recruitContentEndDate, @NonNull TextView recruitContentMax,
      @NonNull TextView recruitContentTitle, @NonNull View recruitContentTitleLine,
      @NonNull TextView recruitContentType, @NonNull NumberPicker recruitCurr,
      @NonNull Button recruitReplyDelete, @NonNull TextView recruitType) {
    this.rootView = rootView;
    this.LinearLayoutAlready = LinearLayoutAlready;
    this.complete = complete;
    this.editComment = editComment;
    this.linearLayout = linearLayout;
    this.recruit = recruit;
    this.recruitContact = recruitContact;
    this.recruitContentAuthor = recruitContentAuthor;
    this.recruitContentButtonBack = recruitContentButtonBack;
    this.recruitContentContent = recruitContentContent;
    this.recruitContentContentLine = recruitContentContentLine;
    this.recruitContentCurr = recruitContentCurr;
    this.recruitContentDate = recruitContentDate;
    this.recruitContentEndDate = recruitContentEndDate;
    this.recruitContentMax = recruitContentMax;
    this.recruitContentTitle = recruitContentTitle;
    this.recruitContentTitleLine = recruitContentTitleLine;
    this.recruitContentType = recruitContentType;
    this.recruitCurr = recruitCurr;
    this.recruitReplyDelete = recruitReplyDelete;
    this.recruitType = recruitType;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRecrucontBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRecrucontBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_recrucont, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRecrucontBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout LinearLayoutAlready = (ConstraintLayout) rootView;

      id = R.id.complete;
      Button complete = ViewBindings.findChildViewById(rootView, id);
      if (complete == null) {
        break missingId;
      }

      id = R.id.edit_comment;
      LinearLayout editComment = ViewBindings.findChildViewById(rootView, id);
      if (editComment == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.recruit;
      TextView recruit = ViewBindings.findChildViewById(rootView, id);
      if (recruit == null) {
        break missingId;
      }

      id = R.id.recruit_contact;
      TextView recruitContact = ViewBindings.findChildViewById(rootView, id);
      if (recruitContact == null) {
        break missingId;
      }

      id = R.id.recruit_content_author;
      TextView recruitContentAuthor = ViewBindings.findChildViewById(rootView, id);
      if (recruitContentAuthor == null) {
        break missingId;
      }

      id = R.id.recruit_content_button_back;
      ImageButton recruitContentButtonBack = ViewBindings.findChildViewById(rootView, id);
      if (recruitContentButtonBack == null) {
        break missingId;
      }

      id = R.id.recruit_content_content;
      TextView recruitContentContent = ViewBindings.findChildViewById(rootView, id);
      if (recruitContentContent == null) {
        break missingId;
      }

      id = R.id.recruit_content_content_line;
      View recruitContentContentLine = ViewBindings.findChildViewById(rootView, id);
      if (recruitContentContentLine == null) {
        break missingId;
      }

      id = R.id.recruit_content_curr;
      TextView recruitContentCurr = ViewBindings.findChildViewById(rootView, id);
      if (recruitContentCurr == null) {
        break missingId;
      }

      id = R.id.recruit_content_date;
      TextView recruitContentDate = ViewBindings.findChildViewById(rootView, id);
      if (recruitContentDate == null) {
        break missingId;
      }

      id = R.id.recruit_content_endDate;
      TextView recruitContentEndDate = ViewBindings.findChildViewById(rootView, id);
      if (recruitContentEndDate == null) {
        break missingId;
      }

      id = R.id.recruit_content_max;
      TextView recruitContentMax = ViewBindings.findChildViewById(rootView, id);
      if (recruitContentMax == null) {
        break missingId;
      }

      id = R.id.recruit_content_title;
      TextView recruitContentTitle = ViewBindings.findChildViewById(rootView, id);
      if (recruitContentTitle == null) {
        break missingId;
      }

      id = R.id.recruit_content_title_line;
      View recruitContentTitleLine = ViewBindings.findChildViewById(rootView, id);
      if (recruitContentTitleLine == null) {
        break missingId;
      }

      id = R.id.recruit_content_type;
      TextView recruitContentType = ViewBindings.findChildViewById(rootView, id);
      if (recruitContentType == null) {
        break missingId;
      }

      id = R.id.recruit_curr;
      NumberPicker recruitCurr = ViewBindings.findChildViewById(rootView, id);
      if (recruitCurr == null) {
        break missingId;
      }

      id = R.id.recruit_reply_delete;
      Button recruitReplyDelete = ViewBindings.findChildViewById(rootView, id);
      if (recruitReplyDelete == null) {
        break missingId;
      }

      id = R.id.recruit_type;
      TextView recruitType = ViewBindings.findChildViewById(rootView, id);
      if (recruitType == null) {
        break missingId;
      }

      return new ActivityRecrucontBinding((ConstraintLayout) rootView, LinearLayoutAlready,
          complete, editComment, linearLayout, recruit, recruitContact, recruitContentAuthor,
          recruitContentButtonBack, recruitContentContent, recruitContentContentLine,
          recruitContentCurr, recruitContentDate, recruitContentEndDate, recruitContentMax,
          recruitContentTitle, recruitContentTitleLine, recruitContentType, recruitCurr,
          recruitReplyDelete, recruitType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
